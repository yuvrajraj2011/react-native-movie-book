{"ast":null,"code":"var _jsxFileName = \"/Users/bhamud/Downloads/react-native-movie-book/Components/MovieDetail.js\";\nimport React, { useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { connect } from 'react-redux';\nimport { fetchLatestMoviesDetail } from \"../Actions/LatestMoviesActions\";\n\nfunction MovieDetail(_ref) {\n  var _this = this;\n\n  var latestMoviesData = _ref.latestMoviesData,\n      fetchlatestMovies = _ref.fetchlatestMovies;\n  useEffect(function () {\n    fetchlatestMovies();\n  }, []);\n  return latestMoviesData.loading ? React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 8\n    }\n  }, \"Loading...\") : latestMoviesData.error ? React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }\n  }, \"Error...\") : React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, latestMoviesData && latestMoviesData.latestMoviesPreducer && latestMoviesData.latestMoviesPreducer.items && latestMoviesData.latestMoviesPreducer.items.map(function (item, key) {\n    if (item.category == \"vegan\") return React.createElement(View, {\n      styles: styles.listItem,\n      key: key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: item.image_url\n      },\n      style: styles.placeImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }\n    }), React.createElement(Text, {\n      styles: styles.textval,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    }, item.name));\n  })));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    latestMoviesData: state\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(disptach) {\n  return {\n    fetchLatestMovies: function (_fetchLatestMovies) {\n      function fetchLatestMovies() {\n        return _fetchLatestMovies.apply(this, arguments);\n      }\n\n      fetchLatestMovies.toString = function () {\n        return _fetchLatestMovies.toString();\n      };\n\n      return fetchLatestMovies;\n    }(function () {\n      return disptach(fetchLatestMovies());\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieDetail);\nvar styles = StyleSheet.create({\n  listContainer: {\n    width: \"80%\"\n  },\n  listItem: {\n    width: \"100%\",\n    padding: 10,\n    marginTop: 2,\n    color: '#191970',\n    backgroundColor: '#eee',\n    alignSelf: 'stretch'\n  },\n  placeImage: {\n    marginRight: 8,\n    height: 200\n  },\n  textval: {\n    textAlign: 'center',\n    fontSize: 30\n  }\n});","map":{"version":3,"sources":["/Users/bhamud/Downloads/react-native-movie-book/Components/MovieDetail.js"],"names":["React","useEffect","connect","fetchLatestMoviesDetail","MovieDetail","latestMoviesData","fetchlatestMovies","loading","error","latestMoviesPreducer","items","map","item","key","category","styles","listItem","uri","image_url","placeImage","textval","name","mapStateToProps","state","mapDispatchToProps","disptach","fetchLatestMovies","StyleSheet","create","listContainer","width","padding","marginTop","color","backgroundColor","alignSelf","marginRight","height","textAlign","fontSize"],"mappings":"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","sourcesContent":["import React,{useEffect} from 'react'\nimport { ScrollView, View,Text,Image,StyleSheet } from 'react-native'\nimport { connect } from 'react-redux'\nimport {fetchLatestMoviesDetail} from '../Actions/LatestMoviesActions'\n\n function MovieDetail({latestMoviesData,fetchlatestMovies}) {\n   useEffect(()=>{\n       fetchlatestMovies()\n   },[])\n\n   return latestMoviesData.loading ?(\n       <Text>Loading...</Text>\n       ): latestMoviesData.error ? (\n           <Text>Error...</Text>\n       ): (    \n        <ScrollView>\n            <View>\n              {\n                latestMoviesData && latestMoviesData.latestMoviesPreducer && latestMoviesData.latestMoviesPreducer.items &&  \n                latestMoviesData.latestMoviesPreducer.items.map((item,key)=>{\n                    if(item.category==\"vegan\")\n                    return (\n                        <View styles={styles.listItem}key={key}>\n                       \n                        <Image source={{uri:item.image_url}} style={styles.placeImage}/>\n                        <Text styles={styles.textval}>\n                            {item.name}\n                        </Text>\n                        </View>\n                    )\n\n                })\n              }\n            </View>\n       </ScrollView>\n    )\n}\n\n\nconst mapStateToProps = (state) =>\n  ({\n    latestMoviesData:state\n    \n})\n\n\nconst mapDispatchToProps = disptach=> {\n  return {\n      fetchLatestMovies:()=>disptach(fetchLatestMovies())\n  }   \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieDetail)\n\n\n\nconst styles = StyleSheet.create({\n    listContainer:{\n        width:\"80%\"\n      },\n    listItem:{\n        width:\"100%\",\n        padding:10,\n        marginTop:2,\n        color:'#191970',\n        backgroundColor: '#eee',\n        alignSelf:'stretch',\n    },\n    placeImage:{\n        marginRight:8,\n        height:200\n    },\n    textval:{\n        textAlign:'center',\n        fontSize:30\n    }\n})\n"]},"metadata":{},"sourceType":"module"}