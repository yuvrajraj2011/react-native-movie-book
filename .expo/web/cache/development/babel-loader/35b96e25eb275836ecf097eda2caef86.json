{"ast":null,"code":"var _jsxFileName = \"/Users/bhamud/Downloads/react-native-movie-book/Components/LatestMovies.js\";\nimport React, { useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport data from \"../JSON/native.json\";\nimport { connect } from 'react-redux';\nimport { fetchLatestMovies as _fetchLatestMovies } from \"../Actions/LatestMoviesActions\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nfunction LatestMovies(_ref) {\n  var _this = this;\n\n  var latestMoviesData = _ref.latestMoviesData,\n      fetchLatestMovies = _ref.fetchLatestMovies,\n      navigation = _ref.navigation;\n  useEffect(function () {\n    fetchLatestMovies();\n  }, []);\n  return latestMoviesData.loading ? React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 8\n    }\n  }, \"Loading...\") : latestMoviesData.error ? React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }\n  }, \"Error...\") : React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, latestMoviesData && latestMoviesData.latestMoviesPreducer && latestMoviesData.latestMoviesPreducer.items && latestMoviesData.latestMoviesPreducer.items.map(function (item, key) {\n    return React.createElement(View, {\n      styles: styles.listItem,\n      key: key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: item.imageUrl\n      },\n      style: styles.placeImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }\n    }), React.createElement(Text, {\n      styles: styles.textval,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    }, item.name), React.createElement(Button, {\n      title: \"Details\",\n      onPress: function onPress() {\n        return navigation.navigate('MovieDetail', {\n          _id: item._id\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }));\n  })));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    latestMoviesData: state\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(disptach) {\n  return {\n    fetchLatestMovies: function fetchLatestMovies() {\n      return disptach(_fetchLatestMovies());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LatestMovies);\nvar styles = StyleSheet.create({\n  listContainer: {\n    width: \"80%\"\n  },\n  listItem: {\n    width: \"100%\",\n    padding: 10,\n    marginTop: 2,\n    color: '#191970',\n    backgroundColor: '#eee',\n    alignSelf: 'stretch'\n  },\n  placeImage: {\n    marginRight: 8,\n    height: 200\n  },\n  textval: {\n    textAlign: 'center',\n    fontSize: 30\n  }\n});","map":{"version":3,"sources":["/Users/bhamud/Downloads/react-native-movie-book/Components/LatestMovies.js"],"names":["React","useEffect","data","connect","fetchLatestMovies","NavigationContainer","createStackNavigator","LatestMovies","latestMoviesData","navigation","loading","error","latestMoviesPreducer","items","map","item","key","styles","listItem","uri","imageUrl","placeImage","textval","name","navigate","_id","mapStateToProps","state","mapDispatchToProps","disptach","StyleSheet","create","listContainer","width","padding","marginTop","color","backgroundColor","alignSelf","marginRight","height","textAlign","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;;;;;;AAEA,OAAOC,IAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,iBAAiB,IAAjBA,kBAAR;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;;AAEC,SAASC,YAAT,OAAuE;AAAA;;AAAA,MAAhDC,gBAAgD,QAAhDA,gBAAgD;AAAA,MAA/BJ,iBAA+B,QAA/BA,iBAA+B;AAAA,MAAbK,UAAa,QAAbA,UAAa;AACrER,EAAAA,SAAS,CAAC,YAAI;AACVG,IAAAA,iBAAiB;AACpB,GAFQ,EAEP,EAFO,CAAT;AAIA,SAAOI,gBAAgB,CAACE,OAAjB,GACH,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADG,GAEAF,gBAAgB,CAACG,KAAjB,GACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,GAGF,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGMH,gBAAgB,IAAIA,gBAAgB,CAACI,oBAArC,IAA6DJ,gBAAgB,CAACI,oBAAjB,CAAsCC,KAAnG,IACAL,gBAAgB,CAACI,oBAAjB,CAAsCC,KAAtC,CAA4CC,GAA5C,CAAgD,UAACC,IAAD,EAAMC,GAAN,EAAY;AAE1D,WACI,oBAAC,IAAD;AAAM,MAAA,MAAM,EAAEC,MAAM,CAACC,QAArB;AAA8B,MAAA,GAAG,EAAEF,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE;AAACG,QAAAA,GAAG,EAACJ,IAAI,CAACK;AAAV,OAAf;AAAoC,MAAA,KAAK,EAAEH,MAAM,CAACI,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,IAAD;AAAM,MAAA,MAAM,EAAEJ,MAAM,CAACK,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,IAAI,CAACQ,IADV,CAFA,EAMA,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAE;AAAA,eAAMd,UAAU,CAACe,QAAX,CAAoB,aAApB,EAAmC;AACtEC,UAAAA,GAAG,EAACV,IAAI,CAACU;AAD6D,SAAnC,CAAN;AAAA,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANA,CADJ;AAaH,GAfC,CAJN,CADJ,CALL;AA8BF;;AAGD,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SACrB;AACCnB,IAAAA,gBAAgB,EAACmB;AADlB,GADqB;AAAA,CAAxB;;AAOA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAG;AACpC,SAAO;AACHzB,IAAAA,iBAAiB,EAAC;AAAA,aAAIyB,QAAQ,CAACzB,kBAAiB,EAAlB,CAAZ;AAAA;AADf,GAAP;AAGD,CAJD;;AAMA,eAAeD,OAAO,CAACuB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CrB,YAA7C,CAAf;AAIA,IAAMU,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,aAAa,EAAC;AACVC,IAAAA,KAAK,EAAC;AADI,GADe;AAI7Bf,EAAAA,QAAQ,EAAC;AACLe,IAAAA,KAAK,EAAC,MADD;AAELC,IAAAA,OAAO,EAAC,EAFH;AAGLC,IAAAA,SAAS,EAAC,CAHL;AAILC,IAAAA,KAAK,EAAC,SAJD;AAKLC,IAAAA,eAAe,EAAE,MALZ;AAMLC,IAAAA,SAAS,EAAC;AANL,GAJoB;AAY7BjB,EAAAA,UAAU,EAAC;AACPkB,IAAAA,WAAW,EAAC,CADL;AAEPC,IAAAA,MAAM,EAAC;AAFA,GAZkB;AAgB7BlB,EAAAA,OAAO,EAAC;AACJmB,IAAAA,SAAS,EAAC,QADN;AAEJC,IAAAA,QAAQ,EAAC;AAFL;AAhBqB,CAAlB,CAAf","sourcesContent":["import React,{useEffect} from 'react'\nimport { ScrollView, View,Text,Image,StyleSheet, Button } from 'react-native'\nimport data from '../JSON/native.json'\nimport { connect } from 'react-redux'\nimport {fetchLatestMovies} from '../Actions/LatestMoviesActions'\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\n function LatestMovies({latestMoviesData,fetchLatestMovies,navigation}) {\n   useEffect(()=>{\n       fetchLatestMovies()\n   },[])\n\n   return latestMoviesData.loading ?(\n       <Text>Loading...</Text>\n       ): latestMoviesData.error ? (\n           <Text>Error...</Text>\n       ): (    \n        <ScrollView>\n            <View>\n              {\n                  \n                  latestMoviesData && latestMoviesData.latestMoviesPreducer && latestMoviesData.latestMoviesPreducer.items &&  \n                  latestMoviesData.latestMoviesPreducer.items.map((item,key)=>{\n                    \n                    return (\n                        <View styles={styles.listItem}key={key}>\n                        <Image source={{uri:item.imageUrl}} style={styles.placeImage}/>\n                        <Text styles={styles.textval}>\n                            {item.name}\n                        \n                        </Text>\n                        <Button title=\"Details\" onPress={() => navigation.navigate('MovieDetail', {\n                            _id:item._id\n                        })}/>  \n                        </View>\n                    )\n\n                })\n              }\n            </View>\n       </ScrollView>\n    )\n}\n\n\nconst mapStateToProps = (state) =>\n  ({\n    latestMoviesData:state\n    \n})\n\n\nconst mapDispatchToProps = disptach=> {\n  return {\n      fetchLatestMovies:()=>disptach(fetchLatestMovies())\n  }   \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LatestMovies)\n\n\n\nconst styles = StyleSheet.create({\n    listContainer:{\n        width:\"80%\"\n      },\n    listItem:{\n        width:\"100%\",\n        padding:10,\n        marginTop:2,\n        color:'#191970',\n        backgroundColor: '#eee',\n        alignSelf:'stretch',\n    },\n    placeImage:{\n        marginRight:8,\n        height:200\n    },\n    textval:{\n        textAlign:'center',\n        fontSize:30\n    }\n})\n"]},"metadata":{},"sourceType":"module"}