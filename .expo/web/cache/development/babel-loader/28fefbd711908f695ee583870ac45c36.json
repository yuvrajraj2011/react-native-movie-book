{"ast":null,"code":"var _jsxFileName = \"/Users/bhamud/Downloads/react-native-movie-book/Components/LatestMovies.js\";\nimport React, { useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { connect } from 'react-redux';\nimport { fetchLatestMovies as _fetchLatestMovies } from \"../Actions/LatestMoviesActions\";\n\nfunction LatestMovies(_ref) {\n  var _this = this;\n\n  var latestMoviesData = _ref.latestMoviesData,\n      fetchLatestMovies = _ref.fetchLatestMovies,\n      navigation = _ref.navigation;\n  useEffect(function () {\n    fetchLatestMovies();\n  }, []);\n\n  var Separator = function Separator() {\n    return React.createElement(View, {\n      style: styles.separator,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }\n    });\n  };\n\n  return latestMoviesData.loading ? React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 8\n    }\n  }, \"Loading...\") : latestMoviesData.error ? React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }\n  }, \"Error...\") : React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, latestMoviesData && latestMoviesData.latestMoviesPreducer && latestMoviesData.latestMoviesPreducer.items && latestMoviesData.latestMoviesPreducer.items.map(function (item, key) {\n    return React.createElement(View, {\n      styles: styles.listItem,\n      key: key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: item.imageUrl\n      },\n      style: styles.placeImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    }), React.createElement(Text, {\n      styles: styles.textval,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    }, item.name), React.createElement(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate('MovieDetail', {\n          _id: item._id\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 29\n      }\n    }, \"Details\")), React.createElement(Separator, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }));\n  })));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    latestMoviesData: state\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(disptach) {\n  return {\n    fetchLatestMovies: function fetchLatestMovies() {\n      return disptach(_fetchLatestMovies());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LatestMovies);\nvar styles = StyleSheet.create({\n  listContainer: {\n    width: \"80%\"\n  },\n  listItem: {\n    width: \"100%\",\n    padding: 10,\n    marginTop: 2,\n    color: '#191970',\n    backgroundColor: '#eee',\n    alignSelf: 'stretch'\n  },\n  placeImage: {\n    marginRight: 8,\n    height: 200\n  },\n  textval: {\n    textAlign: 'center',\n    fontSize: 30\n  },\n  separator: {\n    marginVertical: 8,\n    borderBottomColor: '#737373',\n    borderBottomWidth: StyleSheet.hairlineWidth\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    marginHorizontal: 16\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/Users/bhamud/Downloads/react-native-movie-book/Components/LatestMovies.js"],"names":["React","useEffect","connect","fetchLatestMovies","LatestMovies","latestMoviesData","navigation","Separator","styles","separator","loading","error","latestMoviesPreducer","items","map","item","key","listItem","uri","imageUrl","placeImage","textval","name","button","navigate","_id","mapStateToProps","state","mapDispatchToProps","disptach","StyleSheet","create","listContainer","width","padding","marginTop","color","backgroundColor","alignSelf","marginRight","height","textAlign","fontSize","marginVertical","borderBottomColor","borderBottomWidth","hairlineWidth","container","flex","justifyContent","marginHorizontal","alignItems"],"mappings":"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","sourcesContent":["import React,{useEffect} from 'react'\nimport { ScrollView, View,Text,Image,StyleSheet, Button,TouchableOpacity } from 'react-native'\nimport { connect } from 'react-redux'\nimport {fetchLatestMovies} from '../Actions/LatestMoviesActions'\n\n\n function LatestMovies({latestMoviesData,fetchLatestMovies,navigation}) {\n   useEffect(()=>{\n       fetchLatestMovies()\n   },[])\n\n   const Separator = () => (\n    <View style={styles.separator} />\n  );\n\n   return latestMoviesData.loading ?(\n       <Text>Loading...</Text>\n       ): latestMoviesData.error ? (\n           <Text>Error...</Text>\n       ): (    \n        <ScrollView>\n            <View>\n              {\n                  \n                  latestMoviesData && latestMoviesData.latestMoviesPreducer && latestMoviesData.latestMoviesPreducer.items &&  \n                  latestMoviesData.latestMoviesPreducer.items.map((item,key)=>{\n                    \n                    return (\n                        <View styles={styles.listItem}key={key}>\n                        <Image source={{uri:item.imageUrl}} style={styles.placeImage}/>\n                        <Text styles={styles.textval}>\n                            {item.name}\n                        </Text>\n                        <TouchableOpacity\n                            style={styles.button}\n                            onPress={() => navigation.navigate('MovieDetail', {\n                                _id:item._id\n                            })}>\n                            <Text>Details</Text>\n                        </TouchableOpacity>\n                        <Separator />\n                        </View>\n                    )\n\n                })\n              }\n            </View>\n       </ScrollView>\n    )\n}\n\n\nconst mapStateToProps = (state) =>\n  ({\n    latestMoviesData:state\n    \n})\n\n\nconst mapDispatchToProps = disptach=> {\n  return {\n      fetchLatestMovies:()=>disptach(fetchLatestMovies())\n  }   \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LatestMovies)\n\n\n\nconst styles = StyleSheet.create({\n    listContainer:{\n        width:\"80%\"\n      },\n    listItem:{\n        width:\"100%\",\n        padding:10,\n        marginTop:2,\n        color:'#191970',\n        backgroundColor: '#eee',\n        alignSelf:'stretch',\n    },\n    placeImage:{\n        marginRight:8,\n        height:200\n    },\n    textval:{\n        textAlign:'center',\n        fontSize:30\n    },\n    separator: {\n        marginVertical: 8,\n        borderBottomColor: '#737373',\n        borderBottomWidth: StyleSheet.hairlineWidth,\n      },\n      container: {\n        flex: 1,\n        justifyContent: 'center',\n        marginHorizontal: 16,\n      },\n      button: {\n        alignItems: \"center\",\n        backgroundColor: \"#DDDDDD\",\n        padding: 10\n      },\n})\n"]},"metadata":{},"sourceType":"module"}